syntax = "proto3";

package medical_imaging;

service MedicalImagingService {
    rpc AnalyzeImage(ImageAnalysisRequest) returns (ImageAnalysisResponse);
    rpc ProcessDicom(DicomProcessingRequest) returns (DicomProcessingResponse);
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message ImageAnalysisRequest {
    string patient_id = 1;
    string image_type = 2; // "xray", "ct", "mri", "ultrasound"
    bytes image_data = 3;
    repeated string symptoms = 4;
    string priority = 5; // "urgent", "normal", "routine"
    map<string, string> metadata = 6;
}

message ImageAnalysisResponse {
    string analysis_id = 1;
    string patient_id = 2;
    repeated Finding findings = 3;
    double confidence_score = 4;
    string interpretation = 5;
    repeated string recommendations = 6;
    string urgency_level = 7;
    double processing_time_ms = 8;
    string model_used = 9;
    bool success = 10;
    string error_message = 11;
}

message Finding {
    string type = 1; // "abnormality", "normal", "artifact"
    string description = 2;
    string location = 3;
    double confidence = 4;
    BoundingBox bounding_box = 5;
    string severity = 6; // "mild", "moderate", "severe"
}

message BoundingBox {
    int32 x = 1;
    int32 y = 2;
    int32 width = 3;
    int32 height = 4;
}

message DicomProcessingRequest {
    string patient_id = 1;
    bytes dicom_data = 2;
    repeated string analysis_types = 3;
}

message DicomProcessingResponse {
    string patient_id = 1;
    map<string, string> dicom_metadata = 2;
    repeated ProcessedImage processed_images = 3;
    bool success = 4;
    string error_message = 5;
}

message ProcessedImage {
    string series_uid = 1;
    bytes image_data = 2;
    string modality = 3;
    map<string, string> metadata = 4;
}

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    string status = 1;
    double uptime_seconds = 2;
    int32 processed_images = 3;
    double average_processing_time = 4;
}